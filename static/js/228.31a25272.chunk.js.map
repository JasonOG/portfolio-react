{"version":3,"file":"static/js/228.31a25272.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n};\n\nexport { MotionGlobalConfig };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.18.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.18.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.18.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","useIsomorphicLayoutEffect","render","animationState","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","LayoutGroupContext","id","createMotionProxy","createConfig","custom","arguments","length","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","frame","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","push","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","timestamp","stop","cancelFrame","now","frameData","isProcessing","performance","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","MotionGlobalConfig","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","add","isNumericalString","addUniqueItem","item","removeItem","index","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","clear","collectMotionValues","MotionValue","init","_this","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","steps","process","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig"],"sourceRoot":""}